spring:
  profiles:
    active: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://j12d105.p.ssafy.io:3306/ddingga?createDatabaseIfNotExist=true&useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  application:
    name: ddingga
  jpa:
    properties:
      hibernate:
        format_sql: "true"
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: "true"
    hibernate:
      ddl-auto: update
  # 레디스 설정 jedis 방식은 동기처리 lettuce 방식은 비동기 처리
  data:
    redis:
      host: redis
      port: 6379
      password: ${REDIS_PASSWORD} #바꾸지마셈
      client-type: lettuce
      lettuce:
        pool:
          max-active: 10
          max-wait: 1000
          max-idle: 10
          min-idle: 1
  # 파일 업로드를 위한 설정
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  # AWS S3 설정
  cloud:
    aws:
      s3:
        bucket: ddingga
      region:
        static: ap-northeast-2
      credentials:
        access-key: ${AWS_S3_ACCESS_KEY}
        secret-key: ${AWS_S3_SECRET_KEY}

jwt:
  # JWT 토큰 생성 및 검증에 사용되는 비밀키
  # 실제 운영 환경에서는 환경변수로 관리하는 것을 권장
  secret: ${JWT_SECRET}
  # Access Token 유효기간 (1시간)
  # 짧은 시간으로 설정하여 보안성 강화
  access-token-expiration: 86400
  # Refresh Token 유효기간 (7일)
  # Access Token보다 긴 시간으로 설정
  refresh-token-expiration: 604800
  # JWT 토큰 접두사
  # Authorization 헤더에서 토큰을 식별하는데 사용
  token-prefix: "Bearer "
  # HTTP 요청 헤더에서 JWT 토큰을 전달하는 헤더 이름
  header-string: "Authorization"

server:
  port: 8090

springdoc:
  swagger-ui:
    persist-authorization: true
